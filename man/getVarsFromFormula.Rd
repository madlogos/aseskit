% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formula_vars.R
\name{getVarsFromFormula}
\alias{getVarsFromFormula}
\alias{parse_formula}
\title{Parse a formula to get the variable list}
\usage{
getVarsFromFormula(expr, ...)

parse_formula(expr, ...)
}
\arguments{
\item{expr}{An expression to coerce to formula.}

\item{...}{Other arguments to pass to the function.}
}
\value{
\itemize{
\item If the parsing succeeds, then a named vector of \code{x, y, series} and 
\code{weight}, the missing element will be output as NA \cr
\item If the parsing fails, then the \code{expr} as a character \cr
\item If \code{expr} is NULL or NA/NaN, then NULL or NA
}
If more than one asterisks or pipes are detected, the function will only extract 
the last match as series or weight.
}
\description{
Get \code{x}, \code{y}, \code{weight}, \code{series} from a formula expression. 
If \code{expr} cannot be interpreted as formula, it will be returned as a character
vector as-is.
}
\details{
There are two forms of arguments: \itemize{
\item Put all the arguments in \code{expr} and ignore \code{...}, then the function
will analyze the format and parse elements automatically: left-hand side to "~" is
\code{y}, right-hand side to "~" is independent variables, of which symbols 
connected with + or - is \code{x}, symbols to the right of * is \code{weight}
and symbols to the right of | is \code{series}. \cr
\item Put arguments along with \code{expr} and \code{...}, then the function
will wrap them up as-is and output in a named vector. In this case, the result
totally depends on the order you input the arguments.
}
}
\examples{
\dontrun{
## Identify ingredients in a formula.
getVarsFromFormula("y+z~x*w+m|d")  ## return
  \\tabular(cccc){
   x \\tab y \\tab series \\tab weight \\cr
   "x + m" \\tab "y + z" \\tab "d"  \\tab  "w"
  }
  
## it is equivalent to
parse_formula(y+z~x*w+m|d)

## another form
parse_formula(y+z, x+m, d, w)

}
}
\author{
Yiying Wang, \email{wangy@aetna.com}
}
