% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{aline}
\alias{aline}
\title{Align a vector to match the certain length}
\usage{
aline(x, length.out, rep.which = -1, rep.extend = c("times", "each"),
  append = NULL)
}
\arguments{
\item{x}{input vector}

\item{length.out}{numeric, the length of the expected result vector. It is
consistent with \code{length.out} in \code{\link{rep}()}}

\item{rep.which}{NULL or an integer vector, indicating the element index in \code{x}
that will be replicated to extend the vector. Default -1. Only effective
when append is NULL. \itemize{
 \item NULL: all the elements will be replicated. \cr
 \item integer vector (other than zero): the index of the elements to replicate.
  only the valid elements will be replicated (remove invalid indices). \itemize{
   \item positive: the index from top, e.g., 1, 2 in 1:10 means #1, #2. \cr
   \item negative: the index from bottom, e.g., -1, -2 in 1:10 means #10, #9.
  }
}}

\item{rep.extend}{character, the method to extend \code{x}. Default 'times'.
\itemize{
  \item times: \code{rep(x, times)} will be called. When \code{rep.which} is
   not continuous, it is equivalent to \code{each}. When \code{append} is not NULL,
   \code{append} will be replicated using \code{rep(append, times)} to append
   to \code{x}.\cr
  \item each: \code{rep(x, each)} will be called. When \code{append} is not
   NULL, \code{append} will be replicated using \code{rep(append, each)}
   to append to \code{x}.
}}

\item{append}{a vector for replication to append to \code{x}. Default NULL.
\itemize{
 \item NULL: \code{rep.which} will be used to apply \code{\link{rep}()} to extend
  \code{x}.
 \item others: \code{append} instead of \code{rep.which} will be used to apply
  \code{\link{rep}()} to extend \code{x}.
}}
}
\value{
a vector of length \code{length.out}
}
\description{
When the input vector is longer than the expected length, the vector will be
truncated. When the input vector is shorter than the expected length, part or
the whole body of it will be replcated to match the length. The overhead part will
then also be truncated.
}
\examples{
\dontrun{
x <- letters[1:5]

aline(x, length.out=9, rep.which=2:3)
# [1] "a" "b" "c" "b" "c" "b" "c" "d" "e"

aline(x, length.out=9, rep.which=2:3, rep.extend='each')
# [1] "a" "b" "b" "b" "c" "c" "c" "d" "e"

aline(x, 9, rep.which=2:3, rep.extend='times', append=NA)
# [1] "a" "b" "c" "d" "e" NA  NA  NA  NA

aline(x, 9, rep.extend='each', append=c('m', 'n'))
# [1] "a" "b" "c" "d" "e" "m" "m" "n" "n"


y <- structure(1:5, names=letters[1:5])

aline(y, length.out=9, rep.which=2:3)
# a b c b c b c d e
# 1 2 3 2 3 2 3 4 5

aline(y, length.out=9, rep.which=c(2, 4))
# a b b b c d d d e
# 1 2 2 2 3 4 4 4 5
}
}
\author{
Yiying Wang, \email{wangy@aetna.com}
}
