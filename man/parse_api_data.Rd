% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{parse_api_data}
\alias{parse_api_data}
\title{General function to parse 'api_data' objects}
\usage{
parse_api_data(x, ...)
}
\arguments{
\item{x}{'api_data' objects, typically lists yieled by \code{\link{get_api_data}()}.}

\item{...}{other arguments to pass to the function. Refer to the functions in
'seealso' to know more about available optional arguments.}
}
\value{
a list comprising of \code{\link[dplyr]{tibble}}s. Since the 'api_data'
objects may be of different subclasses, it is not reasonable to coerce the
results into a single data.frame. If the mixed parsing fails somewhere, you
will not get any result.
}
\description{
It is a generic function to parse 'api_data' object ('xxx_geocode', 'xxx_revgeocode',
or 'xxx_geohost'). You can mix 'api_data' objects of different subclasses for
parsing, while the three 'api_data' parsers mentioned in 'seealso' can only parse
objects of the same subclass.
}
\examples{
\dontrun{
# get a bunch of 'api_data' objects
library(asesgeo)
x1 <- geohost('<ip1>', output='raw')
x2 <- geocode('<addr1>', output='raw')
x3 <- revgeocode('<latlng1>', output='raw')

parse_api_data(c(x1, x2, x3))
}

}
\seealso{
\code{\link[asesgeo]{parse_geohosts}()}, \code{\link[asesgeo]{parse_geocodes}()} and
\code{\link[asesgeo]{parse_revgeocodes}()}
}
\author{
Yiying Wang, \email{wangy@aetna.com}
}
