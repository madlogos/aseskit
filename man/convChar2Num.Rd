% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/num_pct.R
\name{convChar2Num}
\alias{convChar2Num}
\alias{to_num}
\title{Convert numeric-like characters back to numbers}
\usage{
convChar2Num(x, strict = TRUE, type = c("scientific", "comma",
  "percent", "currency", "wide", "", "e", ",", "\%", "$", "_"), ...)

to_num(x, strict = TRUE, type = c("scientific", "comma", "percent",
  "currency", "wide", "", "e", ",", "\%", "$", "_"), ...)
}
\arguments{
\item{x}{Character in numeric-like values. Either vector, list, matrix or array.}

\item{strict}{Logical, if only convert strict numeric-like characters, e.g, "4.5\%"
instead of "about 56\%". Default TRUE. If FALSE, it will extract the first numeric-
like character parts.}

\item{type}{Character vector to define which type of numeric-like characters
to convert. Default \code{c("scientific", "comma", "percent", "currency", "wide",
"", "e", ",", "\%", "$", "_")}, of which "e", ",", "\%", "$" , "_" are short for
"scientific", "comma", "percent", "currency", "wide", respectively. If you don't
want to apply any conversion, set \code{type=""}.}
}
\value{
Numeric values as in the same strcture as \code{x}. Non-numeric-like
values will be coerced to NA.
}
\description{
Convert a vector, list or matrix of numeric-like characters back to numeric values.
E.g., percentage, currency, scientific numbers or comma-delimited numbers.
Non-numeric-like characters are coerced to NA.
}
\examples{
\dontrun{
vec <- c("_84\%", "32.9\%", "33", "a", " -5", "0.3e2", "1,200", "$67")
to_num(vec)  # return
# [1]     NA   0.329   33.000    NA   -5.000   30.000 1200.000   67.000

to_num(vec, strict=FALSE)  # return
# [1]  0.840   0.329   33.000    NA   -5.000   30.000 1200.000   67.000

to_num('about 56 pounds', strict=FALSE)  # return
# [1]  56

to_num(matrix(vec, nrow=2))  # return
#       [,1] [,2] [,3] [,4]
# [1,]    NA   33   -5 1200
# [2,] 0.329   NA   30   67

to_num(list(list("56\%"), list()))  # return
}
}
\author{
Yiying Wang, \email{wangy@aetna.com}
}
